from fastapi import FastAPI, Request
from fastapi.templating import Jinja2Templates
from fastapi.staticfiles import StaticFiles
from fastapi.responses import HTMLResponse
import uvicorn

# Instanciation de la sous-librairie FastAPI
app = FastAPI()

# Acc√®s aux fichiers HTML du r√©pertoire templates
templates = Jinja2Templates(directory='templates')

# Permet d'acc√©der aux fichiers CSS du dossier static/
app.mount('/static/', StaticFiles(directory='static'), name='static')

@app.get('/hello', # URL avec chemin sp√©cifi√©
         response_class=HTMLResponse, # affichage en HTML
         summary="Page par d√©faut au format HTML",
         description="""
         Retour des donn√©es au format HTML
         
         Param request : donn√©es √† restituer
         """,
         )
async def get_hello(request:Request):
    return templates.TemplateResponse(
        'indexB002.html', # r√©cup√©ration des donn√©es du fichier HTML
        {'request': request, 'message': 'üíÄüíÄüíÄ ‚ùì'} # message par d√©faut
    )
    
@app.post('/hello', # URL avec chemin sp√©cifi√©
         response_class=HTMLResponse, # affichage en HTML
         summary="Modification du message √† afficher apr√®s le bouton appuy√©",
         description="""
         Retour des donn√©es au format HTML
         
         Param request : donn√©es √† restituer
         """,
         )
async def post_hello(request:Request):
    
    # Instanciation du message √† afficher
    message = "Hello World!"
    
    return templates.TemplateResponse(
        'indexB002.html', # r√©cup√©ration des donn√©es du fichier HTML
        {'request': request, 'message': message} # donn√©es √† restituer
    )

if __name__ == '__main__':
    uvicorn.run(app)
